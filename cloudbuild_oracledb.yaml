# cloudbuild.yaml for building vertx-template with Oracle DB and Postgres in GCB


# Credentials of SourceClear and Docker Store are encrypted using Google Cloud KMS
# Docker Store secrets are used for Oracle DB Docker images
# See below link for more information on using Google Cloud KMS:
# https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#encrypting_an_environment_variable_using_the_cryptokey

secrets:
- kmsKeyName: 'projects/spinnaker-poc-200412/locations/global/keyRings/source-clear-encryption/cryptoKeys/source-clear-encryption'
  secretEnv:
    SRCCLR_API_TOKEN: CiQAxgges9eJ3Ae+K0ncF0O/Mb5dtAu/2ZBxHBHuBxwBQ0bjI14SyQMAnnQB+oQeOtj+xlIMzYOy7gYjHz+NNEvXbCkD4rru22WxriP5uD2By/GAyfh7zayMmQrPGfMpEiIv3D4RvEETYvvctUctG7p52axoSBmndCbe8FYyAgOZL7xcTf4XuHijtvYWLDKoKM7CggANss0hKRmvKnSCfYRRffE18bzIcYygCnx0QdlfF6WXJZZxIxP4CuklJkaU0CiQzYUKrY5OsNxnue/YiWkaexaPkZhnwpC/xGMzOfUNSMFhe70Zqas7ZGR8pzEPaRy1C//qoVsOkqKyxBCqW+LfFLPVic/UlmnKo0lWySDGhvY1XzNQeU8u2hE05zggg0xjCi7q5mw5XcuutcktGx2AMtT7gZplwHBz6sOIn/4gP+7SzuQtmjRHxBwAgMXcqKhYSPy2COC6Vq1ODb0otpdLc09Tqd+1FAOKOLRQ6rPKDKPqviUEgemaaTQWMrcdBNP2YbqgK8U2RXL2uc2/49bU3TpjFbAonzMD9gaCvMw/d3CK3yDDu44NTZEiuldO3R01CwbbkAz5gp7MYUtMBHAeATKvhPFW1dSv9EJML0+j7ldROVYuXbOx6UO3xy87dyDg7e50C3i8UQkpsZ8PgTuX
    DOCKER_USERNAME: CiQAxgges/+3suiMjp5sutEQ+IwPYWzdSO7U0r1lMj64oyQAzMASMgCedAH6qAy7p6/EHl7MhcYFJDEB5Ve+uJUpvIBU+VB0prvuiy70/l2xLZi8igs4JW+y
    DOCKER_PASSWORD: CiQAxgges7DOxqkgtgOuOMALZgIaa9f1JiSno67g6Lol98O5nocSNACedAH6lqExDVBta0bn8WLD+XqAwhLapJxt4mMxzm6waV8t3js8eSV2PswjVb8DDNWWGxE=

# Build Steps:
# 1. ojdbc7.jar is copied from Google Cloud Storage bucket to GCB workspace for
#    using local maven repository to get the ojdbc7.jar dependency

# Note: Edited sample.properties for Oracle/Postgres and enabled/disabled ojdbc7 dependency in pom.xml
steps:
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'gs://delete-oracle-jdbc-jar/ojdbc7.jar', 'ojdbc7.jar']

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'cp ./oracle_sample.properties ./sample.properties; 
         cp ./oracle_pom.xml ./pom.xml']

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker login --username=$$DOCKER_USERNAME --password=$$DOCKER_PASSWORD']
  secretEnv: ['DOCKER_USERNAME', 'DOCKER_PASSWORD']

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker network create $$ORACLEDB_NET']
  env: ['ORACLEDB_NET=stanford-oracledb']

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', "docker run -d --name $$ORACLEDB_SERVER --net $$ORACLEDB_NET \
         -v /workspace:/workspace $$ORACLEDB_IMAGE"]
  env: ['ORACLEDB_IMAGE=store/oracle/database-enterprise:12.2.0.1-slim', 'ORACLEDB_SERVER=oracle-dbserver',
        'ORACLEDB_NET=stanford-oracledb']
 
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', './check_oracledb_health.sh']
  env: ['DB_HLTH_CHK_MAX_RETRY=7', 'DB_HLTH_CHK_SLEEP=20', 'ORACLEDB_SERVER=oracle-dbserver']
  
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', "docker run --name $$APP_BUILD_SERVER --net $$ORACLEDB_NET -e SRCCLR_API_TOKEN \
         -v /workspace:/workspace --entrypoint 'bash' $$APP_BUILD_IMAGE \
         -c 'apt-get update; apt-get install curl -y; cd /workspace; \
         mvn install:install-file -Dfile=./ojdbc7.jar -DgroupId=com.oracle.jdbc -DartifactId=ojdbc7 \
         -Dversion=12.1.0.2 -Dpackaging=jar; mvn -DskipTests clean package; \
         curl -sSL https://download.sourceclear.com/ci.sh | sh'"]
  env: ['APP_BUILD_SERVER=oracledb-app-build-server', 'ORACLEDB_NET=stanford-oracledb',
        'APP_BUILD_IMAGE=gcr.io/cloud-builders/mvn']
  secretEnv: ['SRCCLR_API_TOKEN']

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', "docker run -d --name $$APP_TEST_SERVER --net $$ORACLEDB_NET \
         -v /workspace:/workspace --entrypoint 'bash' $$APP_TEST_IMAGE -c 'cd /workspace; \
         java -Djava.security.egd=file:/dev/./urandom -jar /workspace/target/vertx-*-SNAPSHOT.jar create-database run'"]
  env: ['APP_TEST_SERVER=oracledb-app-test-server', 'ORACLEDB_NET=stanford-oracledb',
        'APP_TEST_IMAGE=gcr.io/cloud-builders/mvn']

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', "docker exec -e ORACLEDB_SERVER -e DB_TBL_CHK_MAX_RETRY \
         -e DB_TBL_CHK_SLEEP $$ORACLEDB_SERVER bash -c '/workspace/check_oracledb_table.sh'"]
  env: ['DB_TBL_CHK_MAX_RETRY=10', 'DB_TBL_CHK_SLEEP=10', 'ORACLEDB_SERVER=oracle-dbserver']

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/vertx-template-oracledb:latest', '-f', 'Dockerfile_oracledb', '.']

images:
  - 'gcr.io/$PROJECT_ID/vertx-template-oracledb:latest'
